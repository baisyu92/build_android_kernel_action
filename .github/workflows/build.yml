name: Build Android Kernel
on: 
    workflow_dispatch:
        inputs:
            url:
                description: 'Repository URL'
                required: true
                default: 'https://github.com/baisyu92/android_kernel_xiaomi_vayu.git'
                type: string
            branch:
                description: 'Branch'
                required: true
                default: 'clo'
                type: string
            defconfig:
                description: 'Device defconfig'
                required: true
                default: 'vayu_user_defconfig'
                type: string
            llvm:
                description: 'Clang version'
                required: true
                default: 'r450784e'
                type: string
                
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: Setup Environment
          run: |
            sudo apt update
            sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 libncurses5 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig
            mkdir build

        - name: Download Release
          run: |
            cd build
            mkdir clang
            wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-${{ inputs.llvm }}.tar.gz
            tar -zxvf clang-${{ inputs.llvm }}.tar.gz -C clang
            mkdir gcc
            wget https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/0a0604336d4d1067aa1aaef8d3779b31fcee841d.tar.gz
            tar -zxvf 0a0604336d4d1067aa1aaef8d3779b31fcee841d.tar.gz -C gcc
            git clone --depth=1 -b ${{ inputs.branch }} ${{ inputs.url }} kernel
            
        - name: Build Kernel
          run: |
            cd build && cd kernel
            make clean && make mrproper
            make 0=out ARCH=arm64 ${{ inputs.defconfig }}
            PATH=$GITHUB_WORKSPACE/build/clang/bin:$GITHUB_WORKSPACE/build/gcc/bin:${PATH}
            make -j$(nproc --all) 0=out ARCH=arm64 CC=clang LD=ld.lld CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android-
            
        - name: Anykernel3
          run: |
            cd build
            git clone --depth=1 https://github.com/osm0sis/AnyKernel3
            sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
            sed -i 's!block=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!block=auto;!g' AnyKernel3/anykernel.sh
            sed -i 's/is_slot_device=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
            cp kernel/arch/arm64/boot/Image AnyKernel3/
            cp kernel/arch/arm64/boot/dtbo.img AnyKernel3/
            cd AnyKernel3
            rm -rf .git .github README.md

        - uses: actions/upload-artifact@v3
          with:
            name: UPDATE-AnyKernel3
            path: build/AnyKernel3/
